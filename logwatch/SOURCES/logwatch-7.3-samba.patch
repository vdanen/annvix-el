--- logwatch-7.3/scripts/services/samba.pom	2005-11-22 19:37:56.000000000 +0100
+++ logwatch-7.3/scripts/services/samba	2006-03-27 14:49:52.000000000 +0200
@@ -51,6 +51,8 @@
 $DbCorrupt = 0;
 $GetDomainMasterStatusFail = 0;
 %SIDnotvalid;
+%RefConnect;
+%CrFile;
 
 if ( $Debug >= 5 ) {
    print STDERR "\n\nDEBUG: Inside Samba Filter \n\n";
@@ -93,6 +95,7 @@
       ($ThisLine =~ /start_async_dns/) or
       ($ThisLine =~ /timeout connecting to/) or
       ($ThisLine =~ /version .+ started/) or
+      ($ThisLine =~ /lib\/account_pol.c:account_policy_get\(204\)  account_policy_get: tdb_fetch_uint32 failed for field \d+ \(.*\), returning 0/ ) or
 		($ThisLine =~ /===============================================================/)
    ) {
       #Don't care about these...
@@ -198,6 +201,10 @@
       $LockDbError{$Error}++;
    } elsif ( ($SID,$dsid) = ($ThisLine =~ /User administrator has Primary Group SID ([^ ]+),   which conflicts with the domain sid ([^ ]+).  Failing operation.$/)) {
       $SIDnotvalid{"$SID,$dsid"}++;
+   } elsif ( ($Addr) = ($ThisLine =~ /libsmb\/cliconnect.c:cli_connect\([0-9]+\)  Error connecting to ([0-9.]*) \(Connection refused\)/)) {
+      $RefConnect{$Addr}++;      
+   } elsif ( ($Name) = ($ThisLine =~ /passdb\/pdb_smbpasswd.c:startsmbfilepwent\([0-9]+\)  startsmbfilepwent_internal: file ([^ ]*) did not exist. File successfully created./)) {
+      $CrFile{$Name}++;
    } elsif ( ($Location,$Reason) = ($ThisLine =~ /tdb_log\([0-9]+\)  tdb\(([^ ]+)\): tdb_reopen: (open failed \([^ ]+\))/)) {
       $LockDbError{"$Location - $Reason"}++;
 	} else {
@@ -275,6 +282,20 @@
    }
 }
 
+if (keys %RefConnect) {
+   print "\nConnections Refused\n";
+   foreach $Line (keys %RefConnect) {
+      print "   Connection refused by $Line : $RefConnect{$Line} Time(s)\n";
+   }
+}
+
+if (keys %CrFile) {
+  print "\nCreated files\n";
+  foreach $Line (keys %CrFile) {
+     print "   file $Line did not exist. File succesfully created: $CrFile{$Line} Time(s)\n";
+  }
+}
+
 if (($Detail >= 5) and (keys %PermissionDenied)) {
    print "\nPermission denied:\n";
    foreach $user (sort {$a cmp $b} keys %PermissionDenied) {
@@ -449,10 +470,10 @@
 }
 
 if (keys %SIDnotvalid) {
-  print ("\n SID is not valid for the domain\n");
+  print ("\nSID is not valid for the domain\n");
   foreach $SIDLog (keys %SIDnotvalid) {
     ($SID,$dsid) = split(",",$SIDLog);
-    print "User administrator Primary Group SID ($SID) conflicts with the domain sid ($dsid): $SIDnotvalid{$SIDLog} Time(s) \n";
+    print "   User administrator Primary Group SID ($SID) conflicts with the domain sid ($dsid): $SIDnotvalid{$SIDLog} Time(s) \n";
   }
 }
 
